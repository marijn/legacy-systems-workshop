"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClassFactory = void 0;
var typescript_1 = __importDefault(require("typescript"));
var Class_1 = require("../Components/Class");
var ComponentFactory_1 = require("./ComponentFactory");
var ClassFactory;
(function (ClassFactory) {
    function create(classSymbol, checker) {
        var result = new Class_1.Class(classSymbol.getName());
        var classDeclaration = classSymbol.getDeclarations();
        if (classDeclaration !== undefined && classDeclaration.length > 0) {
            result.isStatic = ComponentFactory_1.ComponentFactory.isStatic(classDeclaration[classDeclaration.length - 1]);
            result.isAbstract = ComponentFactory_1.ComponentFactory.isAbstract(classDeclaration[classDeclaration.length - 1]);
        }
        if (classSymbol.members !== undefined) {
            result.members = ComponentFactory_1.ComponentFactory.serializeMethods(classSymbol.members, checker);
            result.typeParameters = ComponentFactory_1.ComponentFactory.serializeTypeParameters(classSymbol.members, checker);
        }
        if (classSymbol.exports !== undefined) {
            result.members = result.members.concat(ComponentFactory_1.ComponentFactory.serializeMethods(classSymbol.exports, checker));
        }
        if (classSymbol.globalExports !== undefined) {
            result.members = result.members.concat(ComponentFactory_1.ComponentFactory.serializeMethods(classSymbol.globalExports, checker));
        }
        if (classDeclaration !== undefined && classDeclaration.length > 0) {
            var heritageClauses = classDeclaration[classDeclaration.length - 1].heritageClauses;
            if (heritageClauses !== undefined) {
                heritageClauses.forEach(function (heritageClause) {
                    if (heritageClause.token === typescript_1.default.SyntaxKind.ExtendsKeyword) {
                        result.extendsClass = ComponentFactory_1.ComponentFactory.getExtendsHeritageClauseName(heritageClause);
                    }
                    else if (heritageClause.token === typescript_1.default.SyntaxKind.ImplementsKeyword) {
                        result.implementsInterfaces = ComponentFactory_1.ComponentFactory.getImplementsHeritageClauseNames(heritageClause);
                    }
                });
            }
        }
        return result;
    }
    ClassFactory.create = create;
})(ClassFactory = exports.ClassFactory || (exports.ClassFactory = {}));
